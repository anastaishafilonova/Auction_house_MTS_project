spring.thymeleaf.cache=false
spring.web.resources.cache.period=0
server.port = 8082
spring.application.name=auction-service

spring.datasource.url=jdbc:postgresql://localhost:5432/auction
spring.datasource.username=postgres
spring.datasource.password=12345678

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=validate

spring.jpa.open-in-view=false
payment-service.service.base.url=http://localhost:8081
payment-service.service.timeout.seconds=20
auction-service.service.timeout.seconds=3
resilience4j.ratelimiter.instances.createProduct.limitForPeriod=100
resilience4j.ratelimiter.instances.createProduct.limitRefreshPeriod=1s
resilience4j.ratelimiter.instances.createProduct.timeoutDuration=1s
resilience4j.circuitbreaker.instances.createProduct.failureRateThreshold=10
resilience4j.circuitbreaker.instances.createProduct.slowCallRateThreshold=10
resilience4j.circuitbreaker.instances.createProduct.slowCallDurationThreshold=5000
resilience4j.circuitbreaker.instances.createProduct.slidingWindowSize=100
resilience4j.circuitbreaker.instances.createProduct.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.createProduct.minimumNumberOfCalls=50
resilience4j.circuitbreaker.instances.createProduct.waitDurationInOpenState=60s
resilience4j.retry.instances.createProduct.retry-exceptions[0]=com.example.demo.exception.CheckBalanceException
resilience4j.retry.instances.createProduct.wait-duration=500ms
resilience4j.retry.instances.createProduct.max-attempts=3

spring.kafka.bootstrap-servers=localhost:29093
topic-to-send-message=payment-request

spring.kafka.consumer.group-id=auction-service-group
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.listener.ack-mode=manual_immediate
topic-to-consume-message=auction-request
